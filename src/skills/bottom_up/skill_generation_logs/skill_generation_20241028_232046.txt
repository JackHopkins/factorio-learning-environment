[2024-10-28 23:20:47] Base skills selected:
[2024-10-28 23:20:47]   - test_simple_automated_drill: Tests automated placement and configuration of a basic coal mining setup in a factory automation system. Verifies correct positioning and connection of a burner mining drill, inserter, and transport belts to create a functional coal extraction loop. Checks that components are properly oriented and connected to enable automated coal mining and transport.
[2024-10-28 23:20:47]   - test_place_boiler_next_to_offshore_pump_rotate_and_connect: Positions and connects water infrastructure by finding nearest water source, placing an offshore pump, then placing and rotating a boiler to properly connect with the pump's water output. Tests basic entity placement and rotation mechanics for setting up a water processing system.
[2024-10-28 23:20:47] Combined inventory requirements: {'stone-furnace': 2, 'iron-chest': 6, 'burner-inserter': 12, 'coal': 100, 'transport-belt': 100, 'burner-mining-drill': 10, 'boiler': 2, 'electric-mining-drill': 2, 'assembling-machine-1': 2, 'steam-engine': 2, 'pipe': 2, 'offshore-pump': 2}
[2024-10-28 23:20:49] Generated objective: Implement a snippet that builds a basic steam power generation setup by placing and configuring an offshore pump, boiler, and steam engine in sequence, with transport belts and inserters to automatically feed coal from a mining drill to the boiler, creating a self-sustaining power production system.
[2024-10-28 23:21:01] # Find nearest coal patch and water source
coal_patch = get_resource_patch(Resource.Coal, nearest(Resource.Coal))
water_location = nearest(Resource.Water)
assert coal_patch and water_location, "Required resources not found"

# Set up coal mining
drill_position = coal_patch.bounding_box.center
move_to(drill_position)
drill = place_entity(Prototype.BurnerMiningDrill, Direction.UP, drill_position)
assert drill, "Failed to place mining drill"

# Place offshore pump at water
move_to(water_location)
pump = place_entity(Prototype.OffshorePump, Direction.UP, water_location)
assert pump, "Failed to place offshore pump"

# Place boiler next to pump
boiler_pos = Position(pump.position.x + 2, pump.position.y)
boiler = place_entity(Prototype.Boiler, Direction.RIGHT, boiler_pos)
assert boiler, "Failed to place boiler"

# Place steam engine next to boiler
engine_pos = Position(boiler.position.x + 3, boiler.position.y)
engine = place_entity(Prototype.SteamEngine, Direction.RIGHT, engine_pos)
assert engine, "Failed to place steam engine"

# Connect coal supply to boiler
inserter_pos = Position(boiler.position.x, boiler.position.y - 1)
inserter = place_entity(Prototype.BurnerInserter, Direction.DOWN, inserter_pos)
assert inserter, "Failed to place inserter"

# Place belt from drill to boiler
belt_start = drill.drop_position
belt_end = inserter.pickup_position
belts = connect_entities(belt_start, belt_end, Prototype.TransportBelt)
assert belts, "Failed to place transport belts"

# Verify complete setup
entities = inspect_entities(boiler.position, radius=5)
assert entities.get_entity(Prototype.OffshorePump), "Pump not found"
assert entities.get_entity(Prototype.Boiler), "Boiler not found"
assert entities.get_entity(Prototype.SteamEngine), "Steam engine not found"
assert entities.get_entity(Prototype.BurnerInserter), "Inserter not found"
assert any(e.name == "transport-belt" for e in entities.entities), "Belts not found"

print("Steam power generation setup complete")
