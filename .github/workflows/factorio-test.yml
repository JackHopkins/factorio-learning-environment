name: Factorio Server Tests
on:
  pull_request:
    paths:
      - 'fle/env/**'
      - 'fle/cluster/**'
      - 'tests/actions/**'
      - '.github/workflows/factorio-test.yml'
  workflow_dispatch:

jobs:
  test-factorio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.11'

      - name: Verify scenario exists
        run: |
          # Check that the scenario directory exists
          if [ ! -d "./fle/cluster/scenarios/default_lab_scenario" ]; then
            echo "❌ Scenario directory not found at ./cluster/scenarios/default_lab_scenario"
            exit 1
          fi
          echo "✓ Found scenario directory"
          ls -la ./fle/cluster/scenarios/default_lab_scenario

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Warm the Factorio base image into the runner using GHA cache
      - name: Warm Factorio image layers (cached)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./fle/cluster/Dockerfile.factorio-warm    # see below
          tags: factorio:cache-proxy
          load: true
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Start Factorio server
        run: |
          cd fle/cluster
          bash run-envs.sh start -n 2

      - name: Wait for servers to start
        run: |
          for port in 27000 27001; do
            echo "Waiting for RCON port $port..."
            for i in {1..60}; do
              if nc -z localhost "$port" 2>/dev/null; then
                echo "✓ RCON port $port is open!"
                break
              fi
              echo "Waiting... ($i/60)"
              sleep 1
            done
            nc -z localhost "$port" 2>/dev/null || { echo "❌ RCON $port never became available"; exit 1; }
          done

      - name: Check server status
        run: |
          cd fle/cluster
          docker compose -f docker-compose.yml ps
          docker compose -f docker-compose.yml logs factorio_0

      - name: Install Python dependencies
        run: |
          uv sync --all-extras --dev

      - name: Debug container IPs and ports
        run: |
          echo "=== Docker containers ==="
          docker ps -a
          
          echo -e "\n=== Container port mappings ==="
          docker ps --format "table {{.Names}}\t{{.Ports}}"
          
          echo -e "\n=== Listening ports on host ==="
          sudo netstat -tlnp | grep -E ':(270|34197)' || echo "No matching ports found"
        

      - name: Test RCON connectivity
        run: |
          echo "=== Testing RCON connectivity ==="
          # First, let's see what port the container is actually exposing
          CONTAINER_ID=$(docker ps -q -f name=factorio_1)
          if [ -n "$CONTAINER_ID" ]; then
            echo "Found container ID: $CONTAINER_ID"
            docker inspect $CONTAINER_ID | grep -A 10 "Ports"
          fi
          
          # Try common RCON ports
          for port in 27000 27016 27017 27018 27019 27020; do
            echo -n "Testing port $port: "
            if nc -z -w 2 localhost $port 2>/dev/null; then
              echo "✓ Open"
            else
              echo "✗ Closed"
            fi
          done

      - name: Run Python tests (2 workers)
        run: |
          uv run pytest -n 2 --dist=load -v -s --tb=short tests/actions/
        env:
          FACTORIO_HOST: localhost
          PYTHONUNBUFFERED: 1

      - name: Show test logs on failure
        if: failure()
        run: |
          cd fle/cluster
          echo "=== Factorio container logs ==="
          docker compose -f docker-compose.yml logs factorio_0

      - name: Stop server
        if: always()
        run: |
          cd fle/cluster
          bash run-envs.sh stop